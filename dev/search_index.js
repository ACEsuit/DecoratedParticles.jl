var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = DecoratedParticles","category":"page"},{"location":"#DecoratedParticles","page":"Home","title":"DecoratedParticles","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DecoratedParticles.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [DecoratedParticles]","category":"page"},{"location":"#DecoratedParticles.DState","page":"Home","title":"DecoratedParticles.DState","text":"struct DState: A State-like variable but acting like a vector with arithmetic  operations defined on it, while State acts more like a Point i.e. a fixed object that cannot  be manipulated. The main application of DState is as a derivative of a  State; see also dstate_type, ``\n\n\n\n\n\n","category":"type"},{"location":"#DecoratedParticles.State","page":"Home","title":"DecoratedParticles.State","text":"struct State the main type for states of input variables (particles).  This type is intended only for storing of information but no arithmetic  should be performed on it. For the latter, we have the DState.\n\n\n\n\n\n","category":"type"},{"location":"#DecoratedParticles._findcts-Tuple{TX} where TX<:DecoratedParticles.XState","page":"Home","title":"DecoratedParticles._findcts","text":"Find the indices of continuous properties, and return the  indices as well as the symbols and types\n\n\n\n\n\n","category":"method"},{"location":"#DecoratedParticles.dstate_type-Tuple{DecoratedParticles.DState}","page":"Home","title":"DecoratedParticles.dstate_type","text":"convert a State to a corresponding DState  (basically just remove the discrete variables)\n\n\n\n\n\n","category":"method"},{"location":"#DecoratedParticles.showdigits!-Tuple{Integer}","page":"Home","title":"DecoratedParticles.showdigits!","text":"change how many digits are printed in the State output \n\n\n\n\n\n","category":"method"}]
}
